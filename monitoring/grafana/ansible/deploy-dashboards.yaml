---
- name: Deploy Grafana Dashboards
  hosts: localhost
  connection: local
  vars:
    environment: "{{ env | default('dev') }}"
    grafana_url: "{{ vault_grafana_url }}"
    grafana_user: "{{ vault_grafana_user }}"
    grafana_password: "{{ vault_grafana_password }}"
    dashboards_dir: "./dashboards"
  vars_files:
    - "vault/vault-{{ environment }}.yaml"
  
  tasks:
    - name: Display environment information
      debug:
        msg: "Deploying to {{ environment }} environment - Grafana URL: {{ grafana_url }}"
    
    - name: Find all dashboard JSON files
      find:
        paths: "{{ dashboards_dir }}"
        patterns: "*.json"
      register: dashboard_files
      
    - name: Display found dashboard files
      debug:
        msg: "Found {{ dashboard_files.files | length }} dashboard(s) to deploy/update"
    
    - name: Deploy/Update each dashboard to Grafana
      uri:
        url: "{{ grafana_url }}/api/dashboards/db"
        method: POST
        user: "{{ grafana_user }}"
        password: "{{ grafana_password }}"
        force_basic_auth: yes
        body_format: json
        body: "{{ lookup('file', item.path) | from_json }}"
        headers:
          Content-Type: "application/json"
        status_code: 200
      register: dashboard_result
      loop: "{{ dashboard_files.files }}"
      loop_control:
        label: "{{ item.path | basename }}"
      
    - name: Display dashboard deployment results
      debug:
        msg: "âœ… {{ (lookup('file', item.item.path) | from_json).dashboard.title }} - Status: {% if item.json.version == 1 %}New Dashboard Created{% else %}Existing Dashboard Updated{% endif %} (ID: {{ item.json.id }}, Version: {{ item.json.version }})"
      loop: "{{ dashboard_result.results }}"
      when: dashboard_result is defined